@{
    Layout = "~/Areas/Admin/Views/Shared/Layouts/_Layout_Base.cshtml";
    ViewData["Title"] = "Quản lí sản phẩm";
}

<h1>Product Management (AJAX CRUD)</h1>

<!-- Button Add -->
<button class="btn btn-outline-primary mb-3" data-bs-toggle="modal" data-bs-target="#createModal">
    + Add Product
</button>

<!-- Table -->
<table class="table table-striped table-hover" id="product-table">
    <thead>
        <tr>
            <th>ProductID</th>
            <th>ProductName</th>
            <th>CategoryId</th>
            <th>Price</th>
            <th>Stock</th>
            <th>Created At</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<!-- Pagination -->
<div id="pagination"></div>

<!-- Create -->
<div class="modal fade" id="createModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header"><h5>Add Product</h5></div>
            <div class="modal-body">
                <form id="createForm" enctype="multipart/form-data">

                    <div class="mb-3">
                        <label class="form-label">Product Name</label>
                        <input name="Name" class="form-control" placeholder="Enter product name" required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Price</label>
                        <input name="Price" class="form-control" type="number" placeholder="Enter price" required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Category</label>
                        <select name="CategoryId" id="categorySelect" class="form-select" required>
                            <option value="">-- Select Category --</option>
                        </select>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Stock</label>
                            <input name="Stock" class="form-control" type="number" placeholder="Stock quantity">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Size</label>
                            <input name="Size" class="form-control" placeholder="Size">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Weight</label>
                            <input name="Weight" class="form-control" step="any" type="number" placeholder="Weight">
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Short Description</label>
                        <textarea name="Description" rows="3" class="form-control" placeholder="Enter short description..."></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Detailed Information</label>
                        <textarea name="Information" rows="4" class="form-control" placeholder="Enter detailed information..."></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Product Images</label>
                        <input type="file" name="ImageFiles" multiple class="form-control">
                        <small class="text-muted">You can select multiple images.</small>
                    </div>

                    <button type="submit" class="btn btn-success w-100">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- Edit -->
<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog modal-edit">
        <div class="modal-content">
            <div class="modal-header"><h5>Edit Product</h5></div>
            <div class="modal-body">
                <form id="editForm" enctype="multipart/form-data">
                    <input type="hidden" id="editId">

                    <div class="mb-3">
                        <label class="form-label">Product Name</label>
                        <input name="Name" id="editName" class="form-control" placeholder="Enter product name" required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Price</label>
                        <input name="Price" id="editPrice" class="form-control" type="number" placeholder="Enter price" required>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Category</label>
                        <select name="CategoryId" id="editCategorySelect" class="form-select" required>
                            <option value="">-- Select Category --</option>
                        </select>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Stock</label>
                            <input name="Stock" id="editStock" class="form-control" type="number" placeholder="Stock quantity">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Size</label>
                            <input name="Size" id="editSize" class="form-control" placeholder="Size">
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Weight</label>
                            <input name="Weight" id="editWeight" class="form-control" step="any" type="number" placeholder="Weight">
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Short Description</label>
                        <textarea name="Description" id="editDescription" rows="3" class="form-control" placeholder="Enter short description..."></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Detailed Information</label>
                        <textarea name="Information" id="editInformation" rows="4" class="form-control" placeholder="Enter detailed information..."></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Current Images</label>
                        <div id="editImagePreview" class="d-flex flex-wrap mb-2"></div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Change Images (optional)</label>
                        <input type="file" name="ImageFiles" multiple class="form-control">
                        <small class="text-muted">Select new images if you want to replace the old ones.</small>
                    </div>

                    <button type="submit" class="btn btn-success w-100">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            const pageSize = 10;
            let currentPage = 1;

            // Load products
            function loadProducts(page = 1) {
                currentPage = page;
                $.get(`/api/Admin/ProductApi?page=${page}&pageSize=${pageSize}`, function (response) {
                    const data = response.products;
                    const total = response.total;
                    const totalPages = Math.ceil(total / pageSize);
                    let html = '';

                    if (data.length === 0) {
                        html = `<tr><td colspan="7" class="text-center text-muted">No products found.</td></tr>`;
                    } else {
                        $.each(data, function (i, p) {
                            html += `
                                <tr>
                                    <td>${p.id}</td>
                                    <td>${p.name}</td>
                                    <td>${p.categoryId}</td>
                                    <td>${p.price.toLocaleString('vi-VN')}₫</td>
                                    <td>${p.stock ?? ''}</td>
                                    <td>${new Date(p.createdAt).toLocaleDateString('vi-VN')}</td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary edit-btn" data-id="${p.id}">Edit</button>
                                        <button class="btn btn-sm btn-outline-danger delete-btn" data-id="${p.id}">Delete</button>
                                    </td>
                                </tr>`;
                        });
                    }
                    $('#product-table tbody').html(html);

                    renderPagination(totalPages, page);
                });
            }

            // Pagination
            function renderPagination(totalPages, current) {
                let paginationHtml = `<ul class="pagination justify-content-center">`;
                const maxVisiblePages = 5;
                let startPage = Math.max(1, current - Math.floor(maxVisiblePages / 2));
                let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
                if (endPage - startPage + 1 < maxVisiblePages)
                    startPage = Math.max(1, endPage - maxVisiblePages + 1);

                // Button <<
                if (current > 2)
                    paginationHtml += `<li class="page-item"><a class="page-link page-nav" data-page="1" href="#">«</a></li>`;
                // Button <
                if (current > 1)
                    paginationHtml += `<li class="page-item"><a class="page-link page-nav" data-page="${current - 1}" href="#">‹</a></li>`;

                for (let i = startPage; i <= endPage; i++) {
                    paginationHtml += `<li class="page-item ${i === current ? 'active' : ''}">
                        <a class="page-link page-number" data-page="${i}" href="#">${i}</a></li>`;
                }

                // Button >
                if (current < totalPages)
                    paginationHtml += `<li class="page-item"><a class="page-link page-nav" data-page="${current + 1}" href="#">›</a></li>`;
                // Button >>
                if (current < totalPages - 1)
                    paginationHtml += `<li class="page-item"><a class="page-link page-nav" data-page="${totalPages}" href="#">»</a></li>`;

                paginationHtml += `</ul>`;
                $('#pagination').html(paginationHtml);
            }

            // Pagination Click
            $(document).on('click', '.page-number, .page-nav', function (e) {
                e.preventDefault();
                const page = $(this).data('page');
                loadProducts(page);
            });

            // Create product
            $('#createModal').on('show.bs.modal', function () {
                $.get('/api/Admin/CategoryApi', function (categories) {
                    const $select = $('#categorySelect');
                    $select.empty().append('<option value="">-- Select Category --</option>');
                    $.each(categories, function (i, c) {
                        $select.append(`<option value="${c.id}">${c.name}</option>`);
                    });
                });
            });

            $('#createForm').submit(function (e) {
                e.preventDefault();
                const formData = new FormData(this);

                $.ajax({
                    url: '/api/Admin/ProductApi',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (res) {
                        alert(res.message);
                        $('#createModal').modal('hide');
                        $('#createForm')[0].reset();
                        loadProducts(currentPage);
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        alert('Error creating product');
                    }
                });
            });

            // Edit - load data
            $(document).on('click', '.edit-btn', function () {
                const id = $(this).data('id');

                $.get('/api/Admin/ProductApi/' + id, function (p) {
                    $('#editId').val(p.id);
                    $('#editName').val(p.name);
                    $('#editPrice').val(p.price);
                    $('#editStock').val(p.stock);
                    $('#editWeight').val(p.weight);
                    $('#editSize').val(p.size);
                    $('#editDescription').val(p.description);
                    $('#editInformation').val(p.information);

                    // Show old images
                    let imgs = '';
                    $.each(p.images, function (i, img) {
                        imgs += `<img src="/admin-assets/img/products/${img.imageFileName}"
                                     class="me-2 mb-2" width="100" height="100"
                                     style="object-fit:cover;border:1px solid #ccc;border-radius:5px;">`;
                    });
                    $('#editImagePreview').html(imgs);

                    $('#editModal').modal('show');
                });

                // Load Category dropdown
                $.get('/api/Admin/CategoryApi', function (categories) {
                    const $select = $('#editCategorySelect');
                    $select.empty().append('<option value="">-- Select Category --</option>');
                    $.each(categories, function (i, c) {
                        $select.append(`<option value="${c.id}">${c.name}</option>`);
                    });
                });
            });

            // Edit - submit
            $('#editForm').submit(function (e) {
                e.preventDefault();
                const id = $('#editId').val();
                const formData = new FormData(this);

                $.ajax({
                    url: '/api/Admin/ProductApi/' + id,
                    type: 'PUT',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (res) {
                        alert(res.message);
                        $('#editModal').modal('hide');
                        loadProducts(currentPage);
                    },
                    error: function (xhr) {
                        console.log(xhr);
                        alert('Error updating product');
                    }
                });
            });

            // Delete product
            $(document).on('click', '.delete-btn', function () {
                const id = $(this).data('id');
                if (confirm('Are you sure to delete this product?')) {
                    $.ajax({
                        url: '/api/Admin/ProductApi/' + id,
                        type: 'DELETE',
                        success: function (res) {
                            alert(res.message);
                            loadProducts(currentPage);
                        },
                        error: function (xhr) {
                            console.log(xhr);
                            alert('Error deleting product');
                        }
                    });
                }
            });

            
            loadProducts();
        });
    </script>
}

