@using Macone.Models.Entities
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "~/Areas/Admin/Views/Shared/Layouts/Base/_Layout_Base.cshtml";
}

@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<Product>

<h1>Product Management</h1>

<p>
    <a asp-action="Create" class="btn btn-outline-primary">Create New</a>
</p>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                Product Name
            </th>
            <th>
                Price
            </th>
            <th>
                Created At
            </th>
            <th>
                Category Name
            </th>
            <th> Options</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                <a asp-action="Update" asp-route-id="@item.Id">Update</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@if (Model.PageCount > 1)
{
    <div class="product__pagination d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions(){
            LiElementClasses = new List<String> { "page-item" },
            PageClasses = new List<String> { "page-link" }
        })
    </div>
}
